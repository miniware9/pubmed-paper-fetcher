# PubMed Paper Fetcher

This is a command-line tool to fetch research papers from PubMed based
on a user-specified query and filter those papers to identify authors
affiliated with pharmaceutical or biotech companies. The output is
saved as a CSV file.

## Features

- Fetch research papers using PubMed's Entrez API
- Identify papers with at least one author affiliated with
  a pharmaceutical or biotech company
- Output includes PubMed ID, title, publication date, non-academic
  authors, company affiliations, and corresponding author email
- Command-line interface with helpful options
- Uses typed, modular Python with good error handling
- Designed for performance and code clarity

## Installation

This project uses [Poetry](https://python-poetry.org/) for dependency
management.

1. Clone the repository
git clone https://github.com/yourusername/pubmed-paper-fetcher.git
cd pubmed-paper-fetcher

2. Install Poetry (if not already installed)
curl -sSL https://install.python-poetry.org | python3 -

After installation, restart your terminal or run:
source $HOME/.poetry/env

3. Install dependencies
poetry install

Usage
After installing dependencies:
poetry run get-papers-list "your search query here" [options]

Options
    -f, --file: Specify output CSV filename. If not provided, output is printed to the console.
    -d, --debug: Print debug logs during execution.
    -h, --help: Show usage instructions.


Example
poetry run get-papers-list "mRNA vaccine" -f results.csv -d

Output Format

The CSV or printed output contains the following columns:
    PubmedID: Unique identifier of the paper
    Title: Title of the paper
    Publication Date: Date the paper was published
    Non-academic Author(s): Author names affiliated with non-academic institutions
    Company Affiliation(s): Company or industry-related affiliations
    Corresponding Author Email: Email of the corresponding author (if available)

Project Structure

pubmed-paper-fetcher/
├── pyproject.toml
├── README.md
├── src/
│   └── pubmed_paper_fetcher/
│       ├── __init__.py
│       ├── fetch.py         # Core logic for fetching and filtering papers
│       └── cli.py           # Command-line interface entry point

Tools and Libraries Used
    requests – HTTP library for API calls
    lxml – XML parsing (optional)
    Poetry – Dependency and packaging tool
    PubMed Entrez API – Source of data

Development
    Typed Python is used throughout (mypy compatible)
    Code is modular and testable
    Errors are handled gracefully

Publishing
This project supports publishing as a module. Bonus: can be uploaded to Test PyPI.
